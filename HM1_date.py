# Перше завдання

# Створіть функцію get_days_from_today(date), яка розраховує кількість днів між заданою датою і поточною датою.

from datetime import datetime                                #     Імпортуйємо модуль datetime.

date = input("Введіть дату у форматі YYYY-MM-DD,наприклад 2020-10-09 : " )


def get_days_from_today(date):
    current_date = datetime.today()                                 #     Отримуємо поточну дату, використовуючи datetime.today()
    inputed_date = datetime.strptime(date, "%Y-%m-%d")               #     Перетворюємо рядок дати у форматі 'РРРР-ММ-ДД' у об'єкт datetime.
    delta = current_date.toordinal() - inputed_date.toordinal()    #     Розраховуємо різницю між поточною датою та заданою датою та  Повертаємо різницю у днях як ціле число.
    print(delta)
    return delta


try:                            # викилик функції через фун
    get_days_from_today(date)
except(ValueError):
    print("Некоректний ввід дати. Перевірьте правельність вводу дати згідно наведеного прикладу: формат YYYY-MM-DD,наприклад 2020-10-09")


# Вимоги до завдання:

#     Функція приймає один параметр: date — рядок, що представляє дату у форматі 'РРРР-ММ-ДД' (наприклад, '2020-10-09').
#     Функція повертає ціле число, яке вказує на кількість днів від заданої дати до поточної. Якщо задана дата пізніша за поточну, результат має бути від'ємним.
#     У розрахунках необхідно враховувати лише дні, ігноруючи час (години, хвилини, секунди).
#     Для роботи з датами слід використовувати модуль datetime Python.

# Рекомендації для виконання:

#     Імпортуйте модуль datetime.
#     Перетворіть рядок дати у форматі 'РРРР-ММ-ДД' у об'єкт datetime.
#     Отримайте поточну дату, використовуючи datetime.today().
#     Розрахуйте різницю між поточною датою та заданою датою.
#     Поверніть різницю у днях як ціле число.

# Критерії оцінювання:

#     Коректність роботи функції: функція повинна точно обраховувати кількість днів між датами.
#     Обробка винятків: функція має впоратися з неправильним форматом вхідних даних.
#     Читабельність коду: код повинен бути чистим і добре документованим.

# Приклад:

#     Якщо сьогодні 5 травня 2021 року, виклик get_days_from_today("2021-10-09") повинен повернути 157, оскільки 9 жовтня 2021 року є на 157 днів пізніше від 5 травня 2021 року.